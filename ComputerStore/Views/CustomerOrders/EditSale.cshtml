@model CreateSaleViewModel

<h2 class="text-center mb-4">Edit Sale</h2>

<form asp-action="EditSale" asp-route-saleId="@Model.SaleItems.First().SaleId" method="post">
    <div class="mb-3">
        <label>Customer:</label>
        <select asp-for="CustomerId" class="form-control">
            <option value="">Покупатель без Аккаунта</option>
            @foreach (var customer in Model.AvailableCustomers)
            {
                <option value="@customer.Id" selected="@(customer.Id == Model.CustomerId)">@customer.UserName</option>
            }
        </select>
    </div>

    <div id="saleItemsContainer" class="mb-3">
        <!-- Здесь будут добавляться строки с товарами -->
        @for (var i = 0; i < Model.SaleItems.Count; i++)
        {
            <div class="productRow row mb-3">
                <div class="col-md-4">
                    <label>Category:</label>
                    <select name="SaleItems[@i].CategoryId" class="categorySelect form-control">
                        @foreach (var category in Model.AvailableCategories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <label>Product:</label>
                    <select name="SaleItems[@i].ProductId" class="productSelect form-control">
                        @foreach (var product in Model.AvailableProducts)
                        {
                            <option value="@product.Id" selected="@(product.Id == Model.SaleItems[i].ProductId)">@product.Name - @product.Price</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label>Quantity:</label>
                    <input type="number" name="SaleItems[@i].Quantity" class="quantityInput form-control" min="0" value="@Model.SaleItems[i].Quantity" />
                </div>
                <div class="col-md-1 d-flex align-items-end">
                    <button type="button" class="removeProductButton btn btn-danger btn-sm">Remove</button>
                </div>
            </div>
        }
    </div>

    <div class="mb-3">
        <label>Total Price:</label>
        <input type="text" id="totalPrice" class="form-control" readonly value="@Model.TotalPrice" />
    </div>

    <button type="button" id="addProductButton" class="btn btn-secondary mb-3">Add Product</button>
    <button type="submit" class="btn btn-primary">Save Changes</button>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Инициализация общей стоимости при загрузке страницы


            // Функция для добавления новой строки с товаром
            function addProductRow() {
                var rowIndex = $('#saleItemsContainer').children().length;
                var newRow = `
                    <div class="productRow row mb-3">
                        <div class="col-md-4">
                            <label>Category:</label>
                            <select name="SaleItems[${rowIndex}].CategoryId" class="categorySelect form-control">
        @foreach (var category in Model.AvailableCategories)
        {
                                        <option value="@category.Id">@category.Name</option>
        }
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label>Product:</label>
                            <select name="SaleItems[${rowIndex}].ProductId" class="productSelect form-control">
        @foreach (var product in Model.AvailableProducts)
        {
                                        <option value="@product.Id" data-price="@product.Price">@product.Name - @product.Price</option>
        }
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label>Quantity:</label>
                            <input type="number" name="SaleItems[${rowIndex}].Quantity" class="quantityInput form-control" min="0" value="0" />
                        </div>
                        <div class="col-md-1 d-flex align-items-end">
                            <button type="button" class="removeProductButton btn btn-danger btn-sm">Remove</button>
                        </div>
                    </div>
                `;
                $('#saleItemsContainer').append(newRow);
                calculateTotalPrice(); // Пересчитываем общую стоимость после добавления строки
            }

            // Функция пересчёта общей стоимости
            function calculateTotalPrice() {
                var totalPrice = 0;
                $('.productRow').each(function () {
                    var productSelect = $(this).find('.productSelect');
                    var quantityInput = $(this).find('.quantityInput');

                    var price = parseFloat(productSelect.find('option:selected').data('price')) || 0; // Получаем цену товара
                    var quantity = parseInt(quantityInput.val()) || 0; // Получаем количество

                    totalPrice += price * quantity; // Умножаем цену на количество и добавляем к общей стоимости
                });
                $('#totalPrice').val(totalPrice.toFixed(2)); // Обновляем поле с общей стоимостью
            }

            // Обработчик изменения категории
            $('#saleItemsContainer').on('change', '.categorySelect', function () {
                var categoryId = $(this).val();
                var productSelect = $(this).closest('.productRow').find('.productSelect');

                // Очищаем и блокируем выпадающий список товаров
                productSelect.empty().append('<option value="">-- Select Product --</option>').prop('disabled', true);

                if (categoryId) {
                    // Загружаем товары через AJAX
                    $.ajax({
                        url: '/Sales/GetProductsByCategory',
                        type: 'GET',
                        data: { categoryId: categoryId },
                        success: function (products) {
                            productSelect.prop('disabled', false);
                            products.forEach(function (product) {
                                productSelect.append(`<option value="${product.id}" data-price="${product.price}">${product.name} - ${product.price}</option>`);
                            });
                            calculateTotalPrice(); // Пересчитываем общую стоимость после загрузки товаров
                        }
                    });
                }
            });

            // Обработчик изменения количества товара
            $('#saleItemsContainer').on('input', '.quantityInput', function () {
                calculateTotalPrice();
            });

            // Обработчик изменения товара
            $('#saleItemsContainer').on('change', '.productSelect', function () {
                calculateTotalPrice();
            });

            // Обработчик кнопки "Add Product"
            $('#addProductButton').click(function () {
                addProductRow();
            });

            // Обработчик кнопки "Remove" для удаления строки
            $('#saleItemsContainer').on('click', '.removeProductButton', function () {
                $(this).closest('.productRow').remove();
                calculateTotalPrice();
            });

            calculateTotalPrice();
        });

    </script>
}